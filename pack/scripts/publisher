#!/usr/bin/env python3

import rospy
import cv2
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError

class CameraPublisher:

    def __init__(self):

        rospy.init_node('publisher1', anonymous=True)
        self.pub = rospy.Publisher('webcam', Image, queue_size=5)
        self.bridge = CvBridge()
        self.camera = cv2.VideoCapture(2)
        self.camera.set(cv2.CAP_PROP_FRAME_WIDTH, 960)
        self.camera.set(cv2.CAP_PROP_FRAME_HEIGHT, 960)


    def run(self):
        
        while not rospy.is_shutdown():
            ret, frame = self.camera.read()
            font = cv2.FONT_HERSHEY_SIMPLEX
            cv2.putText(frame, str(0)
                          , (100,200), font,
                        1, (255, 0, 0), 2)
            cv2.putText(frame, str(0)
                          , (44,88), font,
                        1, (255, 0, 0), 2)
            cv2.putText(frame, str(0)
                          , (150,300), font,
                        1, (255, 0, 0), 2)
            cv2.imshow("image",frame)
            if cv2.waitKey(1)==ord('q'):
                break
            if ret:
                try:
                    img_msg = self.bridge.cv2_to_imgmsg(frame, 'bgr8')
                    self.pub.publish(img_msg)
                    print('publishing frame')

                except CvBridgeError as e:
                    print(e)

if __name__ == '__main__':
    try:
        publisher = CameraPublisher()
        publisher.run()

    except rospy.ROSInterruptException:
        pass

